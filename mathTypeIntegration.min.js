const getImageHTML = (e) =>
    `<img align="middle" src="${e.imgSrc}" data-mathml="${e.mathML.replaceAll(
      '"',
      "'"
    )}" role="math" style="max-width: none; vertical-align: -4px;">`,
  closeIframe = () => {
    document.getElementById("mathType").style.display = "none";
  },
  openIFrame = () => {
    const e = document.getElementById("mathType");
    (e.style.display = "block"),
      (e.style =
        "bottom: 0px;right: 10px;height: 422px;width: 700px;border: 1px solid lightgrey;background: #fafafa;z-index: 999999;position: fixed;bottom: 3px;right: 3px;box-shadow: rgb(0 0 0 / 16%) 0px 3px 8px 6px;display: block; border-radius: 3%;");
  };
let isPluginCommSet = !1;
closeIframe();
const setIframeCommunication = (e) => {
  const t = window.frames.mathType;
  t.postMessage({ action: "setCommunication", data: "" }, "*"),
    isPluginCommSet ||
      ((isPluginCommSet = !0),
      window.addEventListener("message", (a) => {
        switch (a.data.action) {
          case "closeIFrame":
            closeIframe();
            break;
          case "openIFrame":
            openIFrame();
            break;
          case "insertImage":
            e.insertContent(
              `<img align="middle" src="${
                (n = a.data.data).imgSrc
              }" data-mathml="${n.mathML.replaceAll(
                '"',
                "'"
              )}" role="math" style="max-width: none; vertical-align: -4px;">`
            ),
              e.contentWindow.document.addEventListener("click", (e) => {
                "img" === e.target.tagName.toLowerCase() &&
                  t.postMessage(
                    {
                      action: "insertMathML",
                      data: `${e.target.getAttribute("data-mathml")}`,
                    },
                    "*"
                  );
              }),
              closeIframe();
        }
        var n;
      }));
};
tinymce.PluginManager.add("MathType", function (e) {
  return (
    e.ui.registry.addButton("mathtype", {
      text: "MathType",
      onAction: () => {
        openIFrame(), setIframeCommunication(e);
      },
    }),
    { getMetadata: () => ({ name: "MathType plugin" }) }
  );
});
